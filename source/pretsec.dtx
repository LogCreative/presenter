% \iffalse meta-comment
% ------------------------------------------------------------------------
% Copyright (C) 2023 Log Creative <logcreative@outlook.com>
%
% This work may be distributed and/or modified under the
% conditions of the LaTeX Project Public License, either version 1.3
% of this license or (at your option) any later version.
% The latest version of this license is in
%   http://www.latex-project.org/lppl.txt
% and version 1.3 or later is part of all distributions of LaTeX
% version 2005/12/01 or later.
%
% This work has the LPPL maintenance status `maintained'.
% 
% The Current Maintainer of this work is Log Creative.
% ------------------------------------------------------------------------
% \fi
%
% \begin{implementation}
%
% \iffalse
%<*package>
\NeedsTeXFormat{LaTeX2e}[2020/10/01]
\ProvidesExplPackage{pretsec}{2023-07-03}{0.4.0}
  {sectioning support pack for presenter}
%</package>
% \fi
%
% \iffalse
%<*package>
% \fi
%
% \section{Presenter Sectioning}
% \label{sec:pretsec}
%
% \pkg{pretsec} package contains algorithms to handle sectioning problems for
% \presenter{}.
%
%    \begin{macrocode}
%<@@=pretsec>
%    \end{macrocode}
%
% \subsection{Sectioning Name--level Relation Storage}
%
% \begin{texnote}
% Since \texttt{prop} from \file{l3prop.dtx} only provides the way to look up
% the value by its key, not the other way around, here \presenter{} uses two
% \texttt{prop}'s to maintain the information on both directions.
% \end{texnote}
%
% \begin{variable}[int]{\g_@@_name_lv_prop, \g_@@_lv_name_prop}
% Global property lists to store the relations between the sectioning name and
% the sectioning level. These private variables should be synced. There are
% public functions \cs{pretsec_put_name_lv:nn}, \cs{pretsec_get_name_lv:nN},
% \cs{pretsec_get_lv_name:nN} to handle the operations on these variables.
%    \begin{macrocode}
\prop_new:N \g_@@_name_lv_prop
\prop_new:N \g_@@_lv_name_prop
%    \end{macrocode}
% \end{variable}
% \begin{macro}{\pretsec_put_name_lv:nn}
% Store the relation of the input sectioning name and sectioning level.
% \begin{arguments}
%   \item sectioning name
%   \item sectioning level
% \end{arguments}
%    \begin{macrocode}
\cs_new:Npn \pretsec_put_name_lv:nn #1#2 {
  \prop_gput:Nnn \g_@@_name_lv_prop { #1 } { #2 }
  \prop_gput:Nnn \g_@@_lv_name_prop { #2 } { #1 }
}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\pretsec_get_name_lv:nN}
% Get the level of the sectioning name and store it to the variable.
% \begin{arguments}
%   \item sectioning name
%   \item output sectioning level (variable)
% \end{arguments}
%    \begin{macrocode}
\cs_new:Npn \pretsec_get_name_lv:nN #1#2 {
  \prop_get:NnN \g_@@_name_lv_prop { #1 } #2
}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\pretsec_get_lv_name:nN}
% Get the sectioning name of the level and store it to the variable.
% \begin{arguments}
%   \item sectioning level
%   \item output sectioning name (variable)
% \end{arguments}
%    \begin{macrocode}
\cs_new:Npn \pretsec_get_lv_name:nN #1#2 {
  \prop_get:NnN \g_@@_lv_name_prop { #1 } #2
}
%    \end{macrocode}
% \end{macro}
%
% \subsection{Sectioning Title Management}
%
% \subsubsection{Required}
%
% \emph{Every sectioning implementation} requires to register the current
% sectioning name and the sectioning title by calling
% \cs{pretsec_register_name_title:nn} for the communication with other
% components of \presenter{}. 
%
% \begin{variable}[int]{\g_@@_cur_name_tl, \g_@@_cur_title_tl}
% These private variables store the metadata of current sectioning name or
% current sectioning title.
%    \begin{macrocode}
\tl_new:N \g_@@_cur_name_tl
\tl_new:N \g_@@_cur_title_tl
%    \end{macrocode}
% \end{variable}
% \begin{macro}{\pretsec_register_name_title:nn}
% Register the current sectioning name and sectioning title to the \presenter{}
% sectioning mechanism, which is required to be called for \emph{every
% sectioning implementation code}.
% \begin{arguments}
%   \item sectioning name token list
%   \item sectioning title token list
% \end{arguments}
%    \begin{macrocode}
\cs_new:Npn \pretsec_register_name_title:nn #1#2 {
  \tl_set:Nn \g_@@_cur_name_tl  { #1 }
  \tl_set:Nn \g_@@_cur_title_tl { #2 }
}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\pretsec_cur_name:, \pretsec_cur_title:}
% Macro of current sectioning name or the current sectioning title.
%    \begin{macrocode}
\cs_new:Nn \pretsec_cur_name:  { \g_@@_cur_name_tl  }
\cs_new:Nn \pretsec_cur_title: { \g_@@_cur_title_tl }
%    \end{macrocode}
% \end{macro}
%
% \subsubsection{Stack-Based}
%
% For the scenario of getting the route from the root to the leaf of the
% current sectioning position of the outline tree, it is efficient to use a
% stack-based solution to keep track of the sectioning.
% Since the sectioning level usually doesn't exceed 5 (subparagrah), the stack
% depth will also no more than 5, which makes possible to process on the fly
% without additional file storage.
% \pkg{pretsec} solution uses two stacks for storing both the level and the
% title info of sectioning.
%
% \begin{figure}[H]
%   \newcommand{\docseqitem}[1]{\framebox[6em]{\vphantom{girl}#1}}
%   \begin{tabular}{ll@{}l@{}l}
%     \cs{g_@@_lv_seq}    & \docseqitem{4} &
%                           \docseqitem{2} &
%                           \docseqitem{1} \\
%     \cs{g_@@_title_seq} & \docseqitem{\meta{paragraph}}  &
%                           \docseqitem{\meta{subsection}} & 
%                           \docseqitem{\meta{section}}
%   \end{tabular}
% \end{figure}
%
% The current implemetation is as follows:
% \begin{itemize}
%  \item If the \meta{name} is \texttt{star}, then set \cs{g_@@_star_mark_bool}
%        to \texttt{true} and store the \meta{title} to the temporary storage
%        \cs{g_@@_star_title_tl}.
%        Since the current implementation of \cs{@ssect} cannot be aware of what
%        level of sectioning for the starred version of those sectioning
%        commands.
%  \item If the \meta{name} is \texttt{part}, then clear two stacks
%        \cs{g_@@_lv_seq} and \cs{g_@@_title_seq}.
%        Since the current implementation of \tn{part} cannot receive the
%        parameter of \meta{part title} and will do the special typesetting
%        distinguished from other sectioning commands.
%  \item Otherwise, pop the stacks until \meta{current level} $<$
%        \meta{stack-top level}, at the moment, the items in the stacks are the
%        ancestors of the current. In the end, push the current item to the
%        stacks. Now, the top of the stack is the child. Be aware, the ancestors
%        are in a reversed order in the sequence (the leftmost is the lowest).
% \end{itemize}
%
% \begin{texnote}
%
% In the current implementation of \file{l3seq.dtx}, for the sequence of length
% $n$, the complexity of the opereations on this sequence:
%
% \begin{center}
%   \begin{tabular}{ccc}
%     \toprule
%     position & left & right \\
%     \midrule
%     push & $\mathcal{O}(1)$ & $\mathcal{O}(1)$ \\
%     get  & $\mathcal{O}(1)$ & $\mathcal{O}(n)$ \\
%     pop  & $\mathcal{O}(1)$ & $\mathcal{O}(n)$ \\
%     \bottomrule
%   \end{tabular}
% \end{center}
%
% It costs more to operate on the right position. Thus, for the use of stacks,
% \file{l3seq.dtx} recommends using left position operations and defines alias
% for such operations.
% Though when traverse the sequence, one needs to reverse the sequence first
% which is also $\mathcal{O}(n)$. At least in \pkg{pretsec}, such operation only
% occurred in the final output, and the regular operations are more frequent
% since they are even in loops, so it is better to follow the guidance even
% though the internal data distribution may not match the regular thoughts.
%
% \end{texnote}
%
% \begin{variable}[int]{\g_@@_star_mark_bool}
% Boolean variable to indicate whether this page is a stared section or not.
%    \begin{macrocode}
\bool_new:N \g_@@_star_mark_bool
\bool_set_false:N \g_@@_star_mark_bool
%    \end{macrocode}
% \end{variable}
% \begin{variable}[int]{\g_@@_star_title_tl}
% Temporary storage for star sectioning title.
%    \begin{macrocode}
\tl_new:N \g_@@_star_title_tl
%    \end{macrocode}
% \end{variable}
% \begin{variable}[int]{\g_@@_lv_seq, \g_@@_title_seq}
% Stacks for storing the sectioning level and the corresponding titles.
% The operation on the two stacks should be synced.
%    \begin{macrocode}
\seq_new:N \g_@@_lv_seq
\seq_new:N \g_@@_title_seq
%    \end{macrocode}
% \end{variable}
%
% \begin{macro}{\pretsec_push_stack_name_title:nn}
% Store the title at the level of sectioning name.
% \begin{arguments}
%   \item sectioning name
%   \item title
% \end{arguments}
%    \begin{macrocode}
\cs_new:Npn \pretsec_push_stack_name_title:nn #1#2 {
  \tl_if_eq:nnTF { #1 } { star }
  {
    \bool_set_true:N \g_@@_star_mark_bool
    \tl_set:Nn \g_@@_star_title_tl { #2 }
  }
  {
    \bool_set_false:N \g_@@_star_mark_bool
    \tl_if_eq:nnTF { #1 } { part }
      {
        \seq_clear:N \g_@@_title_seq
        \seq_clear:N \g_@@_lv_seq
      }
      {
        \pretsec_get_name_lv:nN { #1 } \l_tmpb_int
        \bool_set_true:N \l_tmpa_bool
        \bool_do_while:Nn \l_tmpa_bool
          {
            \seq_get:NNTF \g_@@_lv_seq \l_tmpa_int
              {
                \int_compare:nNnTF { \l_tmpa_int } < { \l_tmpb_int }
                  { \bool_set_false:N \l_tmpa_bool }
                  {
                    \seq_pop:NN \g_@@_lv_seq \l_tmpa_int
                    \seq_pop:NN \g_@@_title_seq \l_tmpa_tl
                  }
              }
              { \bool_set_false:N \l_tmpa_bool }
          }
        \seq_push:NV \g_@@_lv_seq \l_tmpb_int
        \seq_push:Nn \g_@@_title_seq { #2 }
      }
  }
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\pretsec_get_stack_parent_child_title:NN}
% Get the parent title sequence (lowest is in the first) and the child title.
% \begin{arguments}
%   \item parent nodes sequence variable in bottom-up (reversed) order
%   \item child node token list variable
% \end{arguments}
%    \begin{macrocode}
\cs_new:Npn \pretsec_get_stack_parent_child_title:NN #1#2 {
  \seq_clear:N #1
  \tl_clear:N #2
  \bool_if:NTF \g_@@_star_mark_bool
    {
      \tl_set_eq:NN #2 \g_@@_star_title_tl
    }
    {
      \seq_get:NNT \g_@@_lv_seq \l_tmpb_int
        {
          \seq_set_eq:NN \l_tmpa_seq \g_@@_title_seq
          \seq_pop:NN \l_tmpa_seq #2
          \seq_set_eq:NN #1 \l_tmpa_seq
        }
    }
}
%    \end{macrocode}
% \end{macro}
%
% \iffalse
%</package>
% \fi
%
% \end{implementation}
\endinput
